name: Check for unused imports using Pylint 
on:
  workflow_call:
jobs:
  check-unused-imports:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
    steps:

      - name: Checkout pull request head
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      
      - uses: dorny/paths-filter@v3
        id: py-changes
        with:
          filters: |
            src:
              - 'src/**'

      # - name: Get current workflow URL
      #   run: |
      #     REPO_URL="https://github.com/${{ github.repository }}"
      #     RUN_ID="${{ github.run_id }}"
      #     WORKFLOW_URL="${REPO_URL}/actions/runs/${RUN_ID}"
      #     echo "Current Workflow URL: ${WORKFLOW_URL}"
      #     echo "WORKFLOW_URL=${WORKFLOW_URL}" >> $GITHUB_ENV

      - name: Get Job and Run URL
        run: |
          GITHUB_RUN_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          GITHUB_JOB_URL="${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}/checks?check_suite_id=${{ github.run_id }}"
          echo "GITHUB_RUN_URL=$GITHUB_RUN_URL" >> $GITHUB_ENV
          echo "GITHUB_JOB_URL=$GITHUB_JOB_URL" >> $GITHUB_ENV

      - name: Set up Python
        if: steps.py-changes.outputs.src == 'true'
        uses: actions/setup-python@v3
        with:
          python-version: 3.11
        
      - name: Install dependencies
        if: steps.py-changes.outputs.src == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install pylint

      - name: Check unused imports (pylint)
        if: steps.py-changes.outputs.src == 'true'
        run: | 
          pylint_files=$(git ls-files *.py src/migration-scripts)
          set +e
          output=$(pylint --disable=all --enable=W0611 $pylint_files)
          exit_code=$?
          set -e
          echo "$output"
          if [[ $exit_code -eq 0 ]]; then
            echo "WORKFLOW_MESSAGE=':white_check_mark: No issues in *unused-imports* check'" >> $GITHUB_ENV
          else
            echo "WORKFLOW_MESSAGE=':x: Issues found in *unused-imports* check. Please refer the [workflow run]($WORKFLOW_JOB_URL)'" >> $GITHUB_ENV
            exit 1
          fi

      - name: Add PR comment
        if: always()
        uses: mshick/add-pr-comment@v2
        with:
          message: |-
            ${{ env.WORKFLOW_MESSAGE }}
          message-id: "UNUSED_IMPORTS_VALIDATION"
          allow-repeats: false
          
      # - name: Analysing the code with pylint
      #   if: steps.py-changes.outputs.src == 'true'
      #   run: | 
      #     pylint_files=$(git ls-files *.py src/migration-scripts)
      #     set +e
      #     output=$(pylint --disable=all --enable=W0611 --output-format=json $pylint_files 2>&1)
      #     exit_code=$?
      #     set -e
      #     if [[ $exit_code -eq 0 ]]; then
      #       echo "error_message=No issues in unused-imports" >> $GITHUB_ENV
      #       echo "No issues in unused-imports"
      #     else
      #       formatted_output=$(echo "$output" | jq -r '.[] | "\(.type): \(.message) in \(.path):\(.line)"')
      #       echo "$formatted_output"
      #       formatted_env_output=$(echo "$formatted_output" | tr '\n' '. ')
      #       echo "error_message=${formatted_env_output}" >> $GITHUB_ENV
      #       exit 1
      #     fi
           
      # - name: Add PR comment
      #   if: always() && steps.py-changes.outputs.src == 'true'
      #   uses: mshick/add-pr-comment@v2
      #   with:
      #     message: |-
      #       ${{ env.error_message == 'No issues in unused-imports' && 'üëç' || '‚ùå' }}
      #       ${{ env.error_message }}
      #     message-id: "UNUSED_IMPORTS_VALIDATION"
      #     allow-repeats: false
